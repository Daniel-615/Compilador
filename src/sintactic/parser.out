Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CHAR
    COMMA
    DO
    DOT
    ELSE
    FLOAT
    FOR
    GT
    IF
    LT
    QUOTE

Grammar

Rule 0     S' -> program
Rule 1     program -> statement
Rule 2     program -> program statement
Rule 3     statement -> declaration
Rule 4     statement -> assignment
Rule 5     statement -> while_loop
Rule 6     statement -> expression SEMICOLON
Rule 7     declaration -> GLOBAL INT IDENTIFIER SEMICOLON
Rule 8     declaration -> LOCAL INT IDENTIFIER SEMICOLON
Rule 9     declaration -> INT IDENTIFIER SEMICOLON
Rule 10    declaration -> INT IDENTIFIER EQUALS expression SEMICOLON
Rule 11    assignment -> IDENTIFIER EQUALS expression SEMICOLON
Rule 12    expression -> expression PLUS term
Rule 13    expression -> expression MINUS term
Rule 14    expression -> term
Rule 15    term -> term TIMES factor
Rule 16    term -> term DIVIDE factor
Rule 17    term -> factor
Rule 18    factor -> NUMBER
Rule 19    factor -> IDENTIFIER
Rule 20    condition -> IDENTIFIER RELOP expression
Rule 21    while_loop -> WHILE LPAREN condition RPAREN LBRACE program RBRACE

Terminals, with rules where they appear

CHAR                 : 
COMMA                : 
DIVIDE               : 16
DO                   : 
DOT                  : 
ELSE                 : 
EQUALS               : 10 11
FLOAT                : 
FOR                  : 
GLOBAL               : 7
GT                   : 
IDENTIFIER           : 7 8 9 10 11 19 20
IF                   : 
INT                  : 7 8 9 10
LBRACE               : 21
LOCAL                : 8
LPAREN               : 21
LT                   : 
MINUS                : 13
NUMBER               : 18
PLUS                 : 12
QUOTE                : 
RBRACE               : 21
RELOP                : 20
RPAREN               : 21
SEMICOLON            : 6 7 8 9 10 11
TIMES                : 15
WHILE                : 21
error                : 

Nonterminals, with rules where they appear

assignment           : 4
condition            : 21
declaration          : 3
expression           : 6 10 11 12 13 20
factor               : 15 16 17
program              : 2 21 0
statement            : 1 2
term                 : 12 13 14 15 16
while_loop           : 5

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement
    (2) program -> . program statement
    (3) statement -> . declaration
    (4) statement -> . assignment
    (5) statement -> . while_loop
    (6) statement -> . expression SEMICOLON
    (7) declaration -> . GLOBAL INT IDENTIFIER SEMICOLON
    (8) declaration -> . LOCAL INT IDENTIFIER SEMICOLON
    (9) declaration -> . INT IDENTIFIER SEMICOLON
    (10) declaration -> . INT IDENTIFIER EQUALS expression SEMICOLON
    (11) assignment -> . IDENTIFIER EQUALS expression SEMICOLON
    (21) while_loop -> . WHILE LPAREN condition RPAREN LBRACE program RBRACE
    (12) expression -> . expression PLUS term
    (13) expression -> . expression MINUS term
    (14) expression -> . term
    (15) term -> . term TIMES factor
    (16) term -> . term DIVIDE factor
    (17) term -> . factor
    (18) factor -> . NUMBER
    (19) factor -> . IDENTIFIER

    GLOBAL          shift and go to state 7
    LOCAL           shift and go to state 10
    INT             shift and go to state 8
    IDENTIFIER      shift and go to state 9
    WHILE           shift and go to state 11
    NUMBER          shift and go to state 14

    program                        shift and go to state 1
    statement                      shift and go to state 2
    declaration                    shift and go to state 3
    assignment                     shift and go to state 4
    while_loop                     shift and go to state 5
    expression                     shift and go to state 6
    term                           shift and go to state 12
    factor                         shift and go to state 13

state 1

    (0) S' -> program .
    (2) program -> program . statement
    (3) statement -> . declaration
    (4) statement -> . assignment
    (5) statement -> . while_loop
    (6) statement -> . expression SEMICOLON
    (7) declaration -> . GLOBAL INT IDENTIFIER SEMICOLON
    (8) declaration -> . LOCAL INT IDENTIFIER SEMICOLON
    (9) declaration -> . INT IDENTIFIER SEMICOLON
    (10) declaration -> . INT IDENTIFIER EQUALS expression SEMICOLON
    (11) assignment -> . IDENTIFIER EQUALS expression SEMICOLON
    (21) while_loop -> . WHILE LPAREN condition RPAREN LBRACE program RBRACE
    (12) expression -> . expression PLUS term
    (13) expression -> . expression MINUS term
    (14) expression -> . term
    (15) term -> . term TIMES factor
    (16) term -> . term DIVIDE factor
    (17) term -> . factor
    (18) factor -> . NUMBER
    (19) factor -> . IDENTIFIER

    GLOBAL          shift and go to state 7
    LOCAL           shift and go to state 10
    INT             shift and go to state 8
    IDENTIFIER      shift and go to state 9
    WHILE           shift and go to state 11
    NUMBER          shift and go to state 14

    statement                      shift and go to state 15
    declaration                    shift and go to state 3
    assignment                     shift and go to state 4
    while_loop                     shift and go to state 5
    expression                     shift and go to state 6
    term                           shift and go to state 12
    factor                         shift and go to state 13

state 2

    (1) program -> statement .

    GLOBAL          reduce using rule 1 (program -> statement .)
    LOCAL           reduce using rule 1 (program -> statement .)
    INT             reduce using rule 1 (program -> statement .)
    IDENTIFIER      reduce using rule 1 (program -> statement .)
    WHILE           reduce using rule 1 (program -> statement .)
    NUMBER          reduce using rule 1 (program -> statement .)
    $end            reduce using rule 1 (program -> statement .)
    RBRACE          reduce using rule 1 (program -> statement .)


state 3

    (3) statement -> declaration .

    GLOBAL          reduce using rule 3 (statement -> declaration .)
    LOCAL           reduce using rule 3 (statement -> declaration .)
    INT             reduce using rule 3 (statement -> declaration .)
    IDENTIFIER      reduce using rule 3 (statement -> declaration .)
    WHILE           reduce using rule 3 (statement -> declaration .)
    NUMBER          reduce using rule 3 (statement -> declaration .)
    $end            reduce using rule 3 (statement -> declaration .)
    RBRACE          reduce using rule 3 (statement -> declaration .)


state 4

    (4) statement -> assignment .

    GLOBAL          reduce using rule 4 (statement -> assignment .)
    LOCAL           reduce using rule 4 (statement -> assignment .)
    INT             reduce using rule 4 (statement -> assignment .)
    IDENTIFIER      reduce using rule 4 (statement -> assignment .)
    WHILE           reduce using rule 4 (statement -> assignment .)
    NUMBER          reduce using rule 4 (statement -> assignment .)
    $end            reduce using rule 4 (statement -> assignment .)
    RBRACE          reduce using rule 4 (statement -> assignment .)


state 5

    (5) statement -> while_loop .

    GLOBAL          reduce using rule 5 (statement -> while_loop .)
    LOCAL           reduce using rule 5 (statement -> while_loop .)
    INT             reduce using rule 5 (statement -> while_loop .)
    IDENTIFIER      reduce using rule 5 (statement -> while_loop .)
    WHILE           reduce using rule 5 (statement -> while_loop .)
    NUMBER          reduce using rule 5 (statement -> while_loop .)
    $end            reduce using rule 5 (statement -> while_loop .)
    RBRACE          reduce using rule 5 (statement -> while_loop .)


state 6

    (6) statement -> expression . SEMICOLON
    (12) expression -> expression . PLUS term
    (13) expression -> expression . MINUS term

    SEMICOLON       shift and go to state 16
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18


state 7

    (7) declaration -> GLOBAL . INT IDENTIFIER SEMICOLON

    INT             shift and go to state 19


state 8

    (9) declaration -> INT . IDENTIFIER SEMICOLON
    (10) declaration -> INT . IDENTIFIER EQUALS expression SEMICOLON

    IDENTIFIER      shift and go to state 20


state 9

    (11) assignment -> IDENTIFIER . EQUALS expression SEMICOLON
    (19) factor -> IDENTIFIER .

    EQUALS          shift and go to state 21
    TIMES           reduce using rule 19 (factor -> IDENTIFIER .)
    DIVIDE          reduce using rule 19 (factor -> IDENTIFIER .)
    SEMICOLON       reduce using rule 19 (factor -> IDENTIFIER .)
    PLUS            reduce using rule 19 (factor -> IDENTIFIER .)
    MINUS           reduce using rule 19 (factor -> IDENTIFIER .)


state 10

    (8) declaration -> LOCAL . INT IDENTIFIER SEMICOLON

    INT             shift and go to state 22


state 11

    (21) while_loop -> WHILE . LPAREN condition RPAREN LBRACE program RBRACE

    LPAREN          shift and go to state 23


state 12

    (14) expression -> term .
    (15) term -> term . TIMES factor
    (16) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 14 (expression -> term .)
    PLUS            reduce using rule 14 (expression -> term .)
    MINUS           reduce using rule 14 (expression -> term .)
    RPAREN          reduce using rule 14 (expression -> term .)
    TIMES           shift and go to state 24
    DIVIDE          shift and go to state 25


state 13

    (17) term -> factor .

    TIMES           reduce using rule 17 (term -> factor .)
    DIVIDE          reduce using rule 17 (term -> factor .)
    SEMICOLON       reduce using rule 17 (term -> factor .)
    PLUS            reduce using rule 17 (term -> factor .)
    MINUS           reduce using rule 17 (term -> factor .)
    RPAREN          reduce using rule 17 (term -> factor .)


state 14

    (18) factor -> NUMBER .

    TIMES           reduce using rule 18 (factor -> NUMBER .)
    DIVIDE          reduce using rule 18 (factor -> NUMBER .)
    SEMICOLON       reduce using rule 18 (factor -> NUMBER .)
    PLUS            reduce using rule 18 (factor -> NUMBER .)
    MINUS           reduce using rule 18 (factor -> NUMBER .)
    RPAREN          reduce using rule 18 (factor -> NUMBER .)


state 15

    (2) program -> program statement .

    GLOBAL          reduce using rule 2 (program -> program statement .)
    LOCAL           reduce using rule 2 (program -> program statement .)
    INT             reduce using rule 2 (program -> program statement .)
    IDENTIFIER      reduce using rule 2 (program -> program statement .)
    WHILE           reduce using rule 2 (program -> program statement .)
    NUMBER          reduce using rule 2 (program -> program statement .)
    $end            reduce using rule 2 (program -> program statement .)
    RBRACE          reduce using rule 2 (program -> program statement .)


state 16

    (6) statement -> expression SEMICOLON .

    GLOBAL          reduce using rule 6 (statement -> expression SEMICOLON .)
    LOCAL           reduce using rule 6 (statement -> expression SEMICOLON .)
    INT             reduce using rule 6 (statement -> expression SEMICOLON .)
    IDENTIFIER      reduce using rule 6 (statement -> expression SEMICOLON .)
    WHILE           reduce using rule 6 (statement -> expression SEMICOLON .)
    NUMBER          reduce using rule 6 (statement -> expression SEMICOLON .)
    $end            reduce using rule 6 (statement -> expression SEMICOLON .)
    RBRACE          reduce using rule 6 (statement -> expression SEMICOLON .)


state 17

    (12) expression -> expression PLUS . term
    (15) term -> . term TIMES factor
    (16) term -> . term DIVIDE factor
    (17) term -> . factor
    (18) factor -> . NUMBER
    (19) factor -> . IDENTIFIER

    NUMBER          shift and go to state 14
    IDENTIFIER      shift and go to state 27

    term                           shift and go to state 26
    factor                         shift and go to state 13

state 18

    (13) expression -> expression MINUS . term
    (15) term -> . term TIMES factor
    (16) term -> . term DIVIDE factor
    (17) term -> . factor
    (18) factor -> . NUMBER
    (19) factor -> . IDENTIFIER

    NUMBER          shift and go to state 14
    IDENTIFIER      shift and go to state 27

    term                           shift and go to state 28
    factor                         shift and go to state 13

state 19

    (7) declaration -> GLOBAL INT . IDENTIFIER SEMICOLON

    IDENTIFIER      shift and go to state 29


state 20

    (9) declaration -> INT IDENTIFIER . SEMICOLON
    (10) declaration -> INT IDENTIFIER . EQUALS expression SEMICOLON

    SEMICOLON       shift and go to state 30
    EQUALS          shift and go to state 31


state 21

    (11) assignment -> IDENTIFIER EQUALS . expression SEMICOLON
    (12) expression -> . expression PLUS term
    (13) expression -> . expression MINUS term
    (14) expression -> . term
    (15) term -> . term TIMES factor
    (16) term -> . term DIVIDE factor
    (17) term -> . factor
    (18) factor -> . NUMBER
    (19) factor -> . IDENTIFIER

    NUMBER          shift and go to state 14
    IDENTIFIER      shift and go to state 27

    expression                     shift and go to state 32
    term                           shift and go to state 12
    factor                         shift and go to state 13

state 22

    (8) declaration -> LOCAL INT . IDENTIFIER SEMICOLON

    IDENTIFIER      shift and go to state 33


state 23

    (21) while_loop -> WHILE LPAREN . condition RPAREN LBRACE program RBRACE
    (20) condition -> . IDENTIFIER RELOP expression

    IDENTIFIER      shift and go to state 35

    condition                      shift and go to state 34

state 24

    (15) term -> term TIMES . factor
    (18) factor -> . NUMBER
    (19) factor -> . IDENTIFIER

    NUMBER          shift and go to state 14
    IDENTIFIER      shift and go to state 27

    factor                         shift and go to state 36

state 25

    (16) term -> term DIVIDE . factor
    (18) factor -> . NUMBER
    (19) factor -> . IDENTIFIER

    NUMBER          shift and go to state 14
    IDENTIFIER      shift and go to state 27

    factor                         shift and go to state 37

state 26

    (12) expression -> expression PLUS term .
    (15) term -> term . TIMES factor
    (16) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 12 (expression -> expression PLUS term .)
    PLUS            reduce using rule 12 (expression -> expression PLUS term .)
    MINUS           reduce using rule 12 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 12 (expression -> expression PLUS term .)
    TIMES           shift and go to state 24
    DIVIDE          shift and go to state 25


state 27

    (19) factor -> IDENTIFIER .

    TIMES           reduce using rule 19 (factor -> IDENTIFIER .)
    DIVIDE          reduce using rule 19 (factor -> IDENTIFIER .)
    SEMICOLON       reduce using rule 19 (factor -> IDENTIFIER .)
    PLUS            reduce using rule 19 (factor -> IDENTIFIER .)
    MINUS           reduce using rule 19 (factor -> IDENTIFIER .)
    RPAREN          reduce using rule 19 (factor -> IDENTIFIER .)


state 28

    (13) expression -> expression MINUS term .
    (15) term -> term . TIMES factor
    (16) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 13 (expression -> expression MINUS term .)
    PLUS            reduce using rule 13 (expression -> expression MINUS term .)
    MINUS           reduce using rule 13 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 13 (expression -> expression MINUS term .)
    TIMES           shift and go to state 24
    DIVIDE          shift and go to state 25


state 29

    (7) declaration -> GLOBAL INT IDENTIFIER . SEMICOLON

    SEMICOLON       shift and go to state 38


state 30

    (9) declaration -> INT IDENTIFIER SEMICOLON .

    GLOBAL          reduce using rule 9 (declaration -> INT IDENTIFIER SEMICOLON .)
    LOCAL           reduce using rule 9 (declaration -> INT IDENTIFIER SEMICOLON .)
    INT             reduce using rule 9 (declaration -> INT IDENTIFIER SEMICOLON .)
    IDENTIFIER      reduce using rule 9 (declaration -> INT IDENTIFIER SEMICOLON .)
    WHILE           reduce using rule 9 (declaration -> INT IDENTIFIER SEMICOLON .)
    NUMBER          reduce using rule 9 (declaration -> INT IDENTIFIER SEMICOLON .)
    $end            reduce using rule 9 (declaration -> INT IDENTIFIER SEMICOLON .)
    RBRACE          reduce using rule 9 (declaration -> INT IDENTIFIER SEMICOLON .)


state 31

    (10) declaration -> INT IDENTIFIER EQUALS . expression SEMICOLON
    (12) expression -> . expression PLUS term
    (13) expression -> . expression MINUS term
    (14) expression -> . term
    (15) term -> . term TIMES factor
    (16) term -> . term DIVIDE factor
    (17) term -> . factor
    (18) factor -> . NUMBER
    (19) factor -> . IDENTIFIER

    NUMBER          shift and go to state 14
    IDENTIFIER      shift and go to state 27

    expression                     shift and go to state 39
    term                           shift and go to state 12
    factor                         shift and go to state 13

state 32

    (11) assignment -> IDENTIFIER EQUALS expression . SEMICOLON
    (12) expression -> expression . PLUS term
    (13) expression -> expression . MINUS term

    SEMICOLON       shift and go to state 40
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18


state 33

    (8) declaration -> LOCAL INT IDENTIFIER . SEMICOLON

    SEMICOLON       shift and go to state 41


state 34

    (21) while_loop -> WHILE LPAREN condition . RPAREN LBRACE program RBRACE

    RPAREN          shift and go to state 42


state 35

    (20) condition -> IDENTIFIER . RELOP expression

    RELOP           shift and go to state 43


state 36

    (15) term -> term TIMES factor .

    TIMES           reduce using rule 15 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 15 (term -> term TIMES factor .)
    SEMICOLON       reduce using rule 15 (term -> term TIMES factor .)
    PLUS            reduce using rule 15 (term -> term TIMES factor .)
    MINUS           reduce using rule 15 (term -> term TIMES factor .)
    RPAREN          reduce using rule 15 (term -> term TIMES factor .)


state 37

    (16) term -> term DIVIDE factor .

    TIMES           reduce using rule 16 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 16 (term -> term DIVIDE factor .)
    SEMICOLON       reduce using rule 16 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 16 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 16 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 16 (term -> term DIVIDE factor .)


state 38

    (7) declaration -> GLOBAL INT IDENTIFIER SEMICOLON .

    GLOBAL          reduce using rule 7 (declaration -> GLOBAL INT IDENTIFIER SEMICOLON .)
    LOCAL           reduce using rule 7 (declaration -> GLOBAL INT IDENTIFIER SEMICOLON .)
    INT             reduce using rule 7 (declaration -> GLOBAL INT IDENTIFIER SEMICOLON .)
    IDENTIFIER      reduce using rule 7 (declaration -> GLOBAL INT IDENTIFIER SEMICOLON .)
    WHILE           reduce using rule 7 (declaration -> GLOBAL INT IDENTIFIER SEMICOLON .)
    NUMBER          reduce using rule 7 (declaration -> GLOBAL INT IDENTIFIER SEMICOLON .)
    $end            reduce using rule 7 (declaration -> GLOBAL INT IDENTIFIER SEMICOLON .)
    RBRACE          reduce using rule 7 (declaration -> GLOBAL INT IDENTIFIER SEMICOLON .)


state 39

    (10) declaration -> INT IDENTIFIER EQUALS expression . SEMICOLON
    (12) expression -> expression . PLUS term
    (13) expression -> expression . MINUS term

    SEMICOLON       shift and go to state 44
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18


state 40

    (11) assignment -> IDENTIFIER EQUALS expression SEMICOLON .

    GLOBAL          reduce using rule 11 (assignment -> IDENTIFIER EQUALS expression SEMICOLON .)
    LOCAL           reduce using rule 11 (assignment -> IDENTIFIER EQUALS expression SEMICOLON .)
    INT             reduce using rule 11 (assignment -> IDENTIFIER EQUALS expression SEMICOLON .)
    IDENTIFIER      reduce using rule 11 (assignment -> IDENTIFIER EQUALS expression SEMICOLON .)
    WHILE           reduce using rule 11 (assignment -> IDENTIFIER EQUALS expression SEMICOLON .)
    NUMBER          reduce using rule 11 (assignment -> IDENTIFIER EQUALS expression SEMICOLON .)
    $end            reduce using rule 11 (assignment -> IDENTIFIER EQUALS expression SEMICOLON .)
    RBRACE          reduce using rule 11 (assignment -> IDENTIFIER EQUALS expression SEMICOLON .)


state 41

    (8) declaration -> LOCAL INT IDENTIFIER SEMICOLON .

    GLOBAL          reduce using rule 8 (declaration -> LOCAL INT IDENTIFIER SEMICOLON .)
    LOCAL           reduce using rule 8 (declaration -> LOCAL INT IDENTIFIER SEMICOLON .)
    INT             reduce using rule 8 (declaration -> LOCAL INT IDENTIFIER SEMICOLON .)
    IDENTIFIER      reduce using rule 8 (declaration -> LOCAL INT IDENTIFIER SEMICOLON .)
    WHILE           reduce using rule 8 (declaration -> LOCAL INT IDENTIFIER SEMICOLON .)
    NUMBER          reduce using rule 8 (declaration -> LOCAL INT IDENTIFIER SEMICOLON .)
    $end            reduce using rule 8 (declaration -> LOCAL INT IDENTIFIER SEMICOLON .)
    RBRACE          reduce using rule 8 (declaration -> LOCAL INT IDENTIFIER SEMICOLON .)


state 42

    (21) while_loop -> WHILE LPAREN condition RPAREN . LBRACE program RBRACE

    LBRACE          shift and go to state 45


state 43

    (20) condition -> IDENTIFIER RELOP . expression
    (12) expression -> . expression PLUS term
    (13) expression -> . expression MINUS term
    (14) expression -> . term
    (15) term -> . term TIMES factor
    (16) term -> . term DIVIDE factor
    (17) term -> . factor
    (18) factor -> . NUMBER
    (19) factor -> . IDENTIFIER

    NUMBER          shift and go to state 14
    IDENTIFIER      shift and go to state 27

    expression                     shift and go to state 46
    term                           shift and go to state 12
    factor                         shift and go to state 13

state 44

    (10) declaration -> INT IDENTIFIER EQUALS expression SEMICOLON .

    GLOBAL          reduce using rule 10 (declaration -> INT IDENTIFIER EQUALS expression SEMICOLON .)
    LOCAL           reduce using rule 10 (declaration -> INT IDENTIFIER EQUALS expression SEMICOLON .)
    INT             reduce using rule 10 (declaration -> INT IDENTIFIER EQUALS expression SEMICOLON .)
    IDENTIFIER      reduce using rule 10 (declaration -> INT IDENTIFIER EQUALS expression SEMICOLON .)
    WHILE           reduce using rule 10 (declaration -> INT IDENTIFIER EQUALS expression SEMICOLON .)
    NUMBER          reduce using rule 10 (declaration -> INT IDENTIFIER EQUALS expression SEMICOLON .)
    $end            reduce using rule 10 (declaration -> INT IDENTIFIER EQUALS expression SEMICOLON .)
    RBRACE          reduce using rule 10 (declaration -> INT IDENTIFIER EQUALS expression SEMICOLON .)


state 45

    (21) while_loop -> WHILE LPAREN condition RPAREN LBRACE . program RBRACE
    (1) program -> . statement
    (2) program -> . program statement
    (3) statement -> . declaration
    (4) statement -> . assignment
    (5) statement -> . while_loop
    (6) statement -> . expression SEMICOLON
    (7) declaration -> . GLOBAL INT IDENTIFIER SEMICOLON
    (8) declaration -> . LOCAL INT IDENTIFIER SEMICOLON
    (9) declaration -> . INT IDENTIFIER SEMICOLON
    (10) declaration -> . INT IDENTIFIER EQUALS expression SEMICOLON
    (11) assignment -> . IDENTIFIER EQUALS expression SEMICOLON
    (21) while_loop -> . WHILE LPAREN condition RPAREN LBRACE program RBRACE
    (12) expression -> . expression PLUS term
    (13) expression -> . expression MINUS term
    (14) expression -> . term
    (15) term -> . term TIMES factor
    (16) term -> . term DIVIDE factor
    (17) term -> . factor
    (18) factor -> . NUMBER
    (19) factor -> . IDENTIFIER

    GLOBAL          shift and go to state 7
    LOCAL           shift and go to state 10
    INT             shift and go to state 8
    IDENTIFIER      shift and go to state 9
    WHILE           shift and go to state 11
    NUMBER          shift and go to state 14

    program                        shift and go to state 47
    statement                      shift and go to state 2
    declaration                    shift and go to state 3
    assignment                     shift and go to state 4
    while_loop                     shift and go to state 5
    expression                     shift and go to state 6
    term                           shift and go to state 12
    factor                         shift and go to state 13

state 46

    (20) condition -> IDENTIFIER RELOP expression .
    (12) expression -> expression . PLUS term
    (13) expression -> expression . MINUS term

    RPAREN          reduce using rule 20 (condition -> IDENTIFIER RELOP expression .)
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18


state 47

    (21) while_loop -> WHILE LPAREN condition RPAREN LBRACE program . RBRACE
    (2) program -> program . statement
    (3) statement -> . declaration
    (4) statement -> . assignment
    (5) statement -> . while_loop
    (6) statement -> . expression SEMICOLON
    (7) declaration -> . GLOBAL INT IDENTIFIER SEMICOLON
    (8) declaration -> . LOCAL INT IDENTIFIER SEMICOLON
    (9) declaration -> . INT IDENTIFIER SEMICOLON
    (10) declaration -> . INT IDENTIFIER EQUALS expression SEMICOLON
    (11) assignment -> . IDENTIFIER EQUALS expression SEMICOLON
    (21) while_loop -> . WHILE LPAREN condition RPAREN LBRACE program RBRACE
    (12) expression -> . expression PLUS term
    (13) expression -> . expression MINUS term
    (14) expression -> . term
    (15) term -> . term TIMES factor
    (16) term -> . term DIVIDE factor
    (17) term -> . factor
    (18) factor -> . NUMBER
    (19) factor -> . IDENTIFIER

    RBRACE          shift and go to state 48
    GLOBAL          shift and go to state 7
    LOCAL           shift and go to state 10
    INT             shift and go to state 8
    IDENTIFIER      shift and go to state 9
    WHILE           shift and go to state 11
    NUMBER          shift and go to state 14

    statement                      shift and go to state 15
    declaration                    shift and go to state 3
    assignment                     shift and go to state 4
    while_loop                     shift and go to state 5
    expression                     shift and go to state 6
    term                           shift and go to state 12
    factor                         shift and go to state 13

state 48

    (21) while_loop -> WHILE LPAREN condition RPAREN LBRACE program RBRACE .

    GLOBAL          reduce using rule 21 (while_loop -> WHILE LPAREN condition RPAREN LBRACE program RBRACE .)
    LOCAL           reduce using rule 21 (while_loop -> WHILE LPAREN condition RPAREN LBRACE program RBRACE .)
    INT             reduce using rule 21 (while_loop -> WHILE LPAREN condition RPAREN LBRACE program RBRACE .)
    IDENTIFIER      reduce using rule 21 (while_loop -> WHILE LPAREN condition RPAREN LBRACE program RBRACE .)
    WHILE           reduce using rule 21 (while_loop -> WHILE LPAREN condition RPAREN LBRACE program RBRACE .)
    NUMBER          reduce using rule 21 (while_loop -> WHILE LPAREN condition RPAREN LBRACE program RBRACE .)
    $end            reduce using rule 21 (while_loop -> WHILE LPAREN condition RPAREN LBRACE program RBRACE .)
    RBRACE          reduce using rule 21 (while_loop -> WHILE LPAREN condition RPAREN LBRACE program RBRACE .)

