
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'CHAR COMMA DIVIDE DO DOT ELSE EQUALS FLOAT FOR GT IDENTIFIER IF INT LBRACE LPAREN LT MINUS NUMBER PLUS QUOTE RBRACE RELOP RPAREN SEMICOLON TIMES WHILEprogram : statement\n                   | program statementdeclaration : INT IDENTIFIER SEMICOLON\n                    | INT IDENTIFIER EQUALS expression SEMICOLONassignment : IDENTIFIER EQUALS expression SEMICOLONexpression : expression PLUS term\n                    | expression MINUS term\n                    | termterm : term TIMES factor\n                | term DIVIDE factor\n                | factorfactor : NUMBER\n                  | IDENTIFIERcondition : expression RELOP expressionwhile_loop : WHILE LPAREN condition RPAREN LBRACE program RBRACEstatement : declaration\n                    | assignment\n                    | while_loop\n                    | expression SEMICOLON'
    
_lr_action_items = {'INT':([0,1,2,3,4,5,13,14,25,33,36,37,39,40,],[7,7,-1,-16,-17,-18,-2,-19,-3,-5,-4,7,7,-15,]),'IDENTIFIER':([0,1,2,3,4,5,7,13,14,15,16,18,19,20,21,25,26,33,35,36,37,39,40,],[8,8,-1,-16,-17,-18,17,-2,-19,23,23,23,23,23,23,-3,23,-5,23,-4,8,8,-15,]),'WHILE':([0,1,2,3,4,5,13,14,25,33,36,37,39,40,],[9,9,-1,-16,-17,-18,-2,-19,-3,-5,-4,9,9,-15,]),'NUMBER':([0,1,2,3,4,5,13,14,15,16,18,19,20,21,25,26,33,35,36,37,39,40,],[12,12,-1,-16,-17,-18,-2,-19,12,12,12,12,12,12,-3,12,-5,12,-4,12,12,-15,]),'$end':([1,2,3,4,5,13,14,25,33,36,40,],[0,-1,-16,-17,-18,-2,-19,-3,-5,-4,-15,]),'RBRACE':([2,3,4,5,13,14,25,33,36,39,40,],[-1,-16,-17,-18,-2,-19,-3,-5,-4,40,-15,]),'SEMICOLON':([6,8,10,11,12,17,22,23,24,27,30,31,32,],[14,-13,-8,-11,-12,25,-6,-13,-7,33,-9,-10,36,]),'PLUS':([6,8,10,11,12,22,23,24,27,29,30,31,32,38,],[15,-13,-8,-11,-12,-6,-13,-7,15,15,-9,-10,15,15,]),'MINUS':([6,8,10,11,12,22,23,24,27,29,30,31,32,38,],[16,-13,-8,-11,-12,-6,-13,-7,16,16,-9,-10,16,16,]),'EQUALS':([8,17,],[18,26,]),'TIMES':([8,10,11,12,22,23,24,30,31,],[-13,20,-11,-12,20,-13,20,-9,-10,]),'DIVIDE':([8,10,11,12,22,23,24,30,31,],[-13,21,-11,-12,21,-13,21,-9,-10,]),'LPAREN':([9,],[19,]),'RELOP':([10,11,12,22,23,24,29,30,31,],[-8,-11,-12,-6,-13,-7,35,-9,-10,]),'RPAREN':([10,11,12,22,23,24,28,30,31,38,],[-8,-11,-12,-6,-13,-7,34,-9,-10,-14,]),'LBRACE':([34,],[37,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,37,],[1,39,]),'statement':([0,1,37,39,],[2,13,2,13,]),'declaration':([0,1,37,39,],[3,3,3,3,]),'assignment':([0,1,37,39,],[4,4,4,4,]),'while_loop':([0,1,37,39,],[5,5,5,5,]),'expression':([0,1,18,19,26,35,37,39,],[6,6,27,29,32,38,6,6,]),'term':([0,1,15,16,18,19,26,35,37,39,],[10,10,22,24,10,10,10,10,10,10,]),'factor':([0,1,15,16,18,19,20,21,26,35,37,39,],[11,11,11,11,11,11,30,31,11,11,11,11,]),'condition':([19,],[28,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement','program',1,'p_program','parser.py',13),
  ('program -> program statement','program',2,'p_program','parser.py',14),
  ('declaration -> INT IDENTIFIER SEMICOLON','declaration',3,'p_declaration','parser.py',19),
  ('declaration -> INT IDENTIFIER EQUALS expression SEMICOLON','declaration',5,'p_declaration','parser.py',20),
  ('assignment -> IDENTIFIER EQUALS expression SEMICOLON','assignment',4,'p_assignment','parser.py',31),
  ('expression -> expression PLUS term','expression',3,'p_expression','parser.py',41),
  ('expression -> expression MINUS term','expression',3,'p_expression','parser.py',42),
  ('expression -> term','expression',1,'p_expression','parser.py',43),
  ('term -> term TIMES factor','term',3,'p_term','parser.py',65),
  ('term -> term DIVIDE factor','term',3,'p_term','parser.py',66),
  ('term -> factor','term',1,'p_term','parser.py',67),
  ('factor -> NUMBER','factor',1,'p_factor','parser.py',90),
  ('factor -> IDENTIFIER','factor',1,'p_factor','parser.py',91),
  ('condition -> expression RELOP expression','condition',3,'p_condition','parser.py',103),
  ('while_loop -> WHILE LPAREN condition RPAREN LBRACE program RBRACE','while_loop',7,'p_while_loop','parser.py',108),
  ('statement -> declaration','statement',1,'p_statement','parser.py',113),
  ('statement -> assignment','statement',1,'p_statement','parser.py',114),
  ('statement -> while_loop','statement',1,'p_statement','parser.py',115),
  ('statement -> expression SEMICOLON','statement',2,'p_statement','parser.py',116),
]
